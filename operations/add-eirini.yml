# Add eirini
- type: replace
  path: /instance_groups/name=eirini?
  value:
    name: eirini
    release: eirini
    azs: [z1]
    instances: 1
    vm_type: minimal
    stemcell: default
    networks:
    - name: default
    jobs:
    - name: opi
      release: eirini
      properties:
        opi:
          server_cert: ((eirini_tls_server_cert.certificate))
          server_key: ((eirini_tls_server_cert.private_key))
          client_ca: ((service_cf_internal_ca.certificate))

          kube_namespace: cf-workloads
          kube_service_host: ""
          kube_service_port: ""
          registry_address: registry.((system_domain))
          registry_username: admin
          registry_password: ((bits_service_signing_password))
          nats_password: ((nats_password))
          nats_ip: q-s0.nats.default.cf.bosh
          certs_secret_name: eirini-staging-secret
          cc_internal_api: https://cloud-controller-ng.service.cf.internal:9023
          eirini_address: https://eirini.service.cf.internal:8484
          downloader_image: "eirini/recipe-downloader"
          uploader_image: "eirini/recipe-uploader"
          executor_image: "eirini/recipe-executor"
          metrics_source_address: ""
          loggregator_address: localhost:3458
          loggregator_cert: ((loggregator_tls_agent.certificate))
          loggregator_key: ((loggregator_tls_agent.private_key))
          loggregator_ca: ((loggregator_tls_agent.certificate))
          cc_cert: ((cc_bridge_tps.certificate))
          cc_key: ((cc_bridge_tps.private_key))
          cc_ca: ((service_cf_internal_ca.certificate))

          k8s:
            host_url: ((k8s_host_url))
            service_account:
              name: ((k8s_service_username))
              token: ((k8s_service_token))
            node_ca: ((k8s_node_ca))
    - name: configure-eirini-bosh
      release: eirini
      properties:
        eirini:
          k8s:
            host_url: ((k8s_host_url))
            service_account:
              name: ((k8s_service_username))
              token: ((k8s_service_token))
            node_ca: ((k8s_node_ca))
          config_copier_image: alpine:latest
          doppler_address: doppler.service.cf.internal:8082
          doppler_address_with_az: doppler.service.cf.internal:8082
          fluentd_image: eirini/loggregator-fluentd
          loggregator_agent_image: loggregator/agent
          server_cert: ((eirini_tls_server_cert.certificate))
          server_key: ((eirini_tls_server_cert.private_key))
          client_ca: ((service_cf_internal_ca.certificate))
        opi:
          certs_secret_name: eirini-staging-secret
          workloads_namespace: cf-workloads
          system_namespace: cf-system
        cc:
          server_cert_key: ((cc_bridge_tps.certificate))
          server_cert: ((cc_bridge_tps.private_key))
          ca_cert: ((service_cf_internal_ca.certificate))
        loggregator:
          agent-cert: ((loggregator_tls_agent.certificate))
          agent-cert-key: ((loggregator_tls_agent.private_key))
          ca-cert: ((loggregator_tls_agent.ca))

- type: replace
  path: /variables/name=eirini_tls_server_cert?
  value:
    name: eirini_tls_server_cert
    type: certificate
    options:
      ca: service_cf_internal_ca
      common_name: eirini.service.cf.internal
      extended_key_usage:
      - server_auth
- type: replace
  path: /variables/name=eirini_tls_client_cert?
  value:
    name: eirini_tls_client_cert
    type: certificate
    options:
      ca: service_cf_internal_ca
      common_name: cloud_controller
      extended_key_usage:
      - client_auth
- type: replace
  path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/domain=eirini.service.cf.internal?
  value:
    domain: eirini.service.cf.internal
    targets:
    - query: '*'
      instance_group: eirini
      deployment: cf
      network: default
      domain: bosh

# Attach a persistent disk to bits-service VM to store eirinifs
- type: replace
  path: /instance_groups/name=bits/persistent_disk_type?
  value: 5GB

# Enable Docker registry on bits-service (used by OPI)
- type: replace
  path: /instance_groups/name=bits/jobs/name=bits-service/properties/bits-service/enable_registry?
  value: true
- type: replace
  path: /instance_groups/name=bits/jobs/name=bits-service/properties/bits-service/registry_endpoint?
  value: "https://registry.((system_domain))"
- type: replace
  path: /instance_groups/name=bits/jobs/name=route_registrar/properties/route_registrar/routes/name=bits-service/uris/-
  value: registry.((system_domain))
- type: replace
  path: /variables/name=bits_service_ssl/options/alternative_names/-
  value: registry.((system_domain))

# Add eirinifs job to the bits-service to copy the tarball into the bits-service VM
- type: replace
  path: /instance_groups/name=bits/jobs/name=eirinifs?
  value:
    name: eirinifs
    release: eirini
- type: replace
  path: /instance_groups/name=bits/jobs/name=bits-service/properties/bits-service/rootfs?/blobstore_type?
  value: local

- type: replace
  path: /releases/name=bits-service/version?
  value: latest
- type: replace
  path: /releases/name=eirini?/version?
  value: latest

# Enable OPI in CC
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/url?
  value: https://eirini.service.cf.internal:8484
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/opi_staging?
  value: false
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/client_cert?
  value: ((eirini_tls_client_cert.certificate))
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/client_key?
  value: ((eirini_tls_client_cert.private_key))
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/ca_cert?
  value: ((eirini_tls_server_cert.ca))

- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/url?
  value: https://eirini.service.cf.internal:8484
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/opi_staging?
  value: false
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/client_cert?
  value: ((eirini_tls_client_cert.certificate))
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/client_key?
  value: ((eirini_tls_client_cert.private_key))
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/ca_cert?
  value: ((eirini_tls_server_cert.ca))

- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/url?
  value: https://eirini.service.cf.internal:8484
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/opi_staging?
  value: false
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/client_cert?
  value: ((eirini_tls_client_cert.certificate))
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/client_key?
  value: ((eirini_tls_client_cert.private_key))
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/ca_cert?
  value: ((eirini_tls_server_cert.ca))

# Make loggregator agent cert validate correctly for fluentd in k8s nodes
- type: replace
  path: /variables/name=loggregator_tls_agent/options/alternative_names?
  value:
    - localhost
    - metron
